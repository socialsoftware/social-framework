	package pt.ist.socialframework.domain;

class SocialPlatform;

class Party;

class Interaction {
	DateTime creationTime;
}

class Information;

class InformationRoleManager;

class InformationRole {
	String role;
}

class Attribute {
	String value;
}

class AttributeRoleManager;

class AttributeRole {
	String role;
}

class Discussion {
	String theme;
	DateTime creationTime;
}

class Conversation { 
	DateTime creationTime;
	String message;
}

relation SocialPlatformHasParty {
	SocialPlatform playsRole socialPlatform { multiplicity 0..1; }
	Party playsRole party { multiplicity 0..*; }
}

relation SocialPlatformHasInteraction {
	SocialPlatform playsRole socialPlatform { multiplicity 0..1; }
	Interaction playsRole interaction { multiplicity 0..*; }
}

relation SocialPlaformHasInformationRoleManager {
	SocialPlatform playsRole socialPlatform { multiplicity 0..1; }
	InformationRoleManager playsRole informationRoleManager { multiplicity 0..1; }
}

relation SocialPlatformHasAttributeRoleManager { 
	SocialPlatform playsRole socialPlatform { multiplicity 0..1; }
	AttributeRoleManager playsRole attributeRoleManager { multiplicity 0..1; }
}

relation InformationHasClonedInformation { 
	Information playsRole originalInformation { multiplicity 0..1; }
	Information playsRole forkedInformation { multiplicity 0..*; }
}

relation PartyHasInteraction { 
	Party playsRole party { multiplicity 0..*; }
	Interaction playsRole interaction { multiplicity 0..*; }
}

relation InteractionHasInteractions {
	Interaction playsRole sourceInteraction { multiplicity 0..1; }
	Interaction playsRole destinationInteraction { multiplicity 0..*; }
}

relation InteractionHasInformation { 
	Interaction playsRole interaction { multiplicity 0..1; }
	Information playsRole information { multiplicity 0..*; }
}

relation InformationHasInformationRole { 
	Information playsRole information { multiplicity 0..*; }
	InformationRole playsRole role {multiplicity 0..1;}
}

relation InformationRoleManagerHasInformationRole { 
	InformationRoleManager playsRole informationRoleManager { multiplicity 0..1; }
	InformationRole playsRole informationRole { multiplicity 0..*; }
}

relation InformationHasAttributes { 
	Information playsRole information { multiplicity 0..1; }
	Attribute playsRole attribute { multiplicity 0..*; }
}

relation AttributeHasAttributeRole { 
	Attribute playsRole attribute { multiplicity 0..*; }
	AttributeRole playsRole attributeRole { multiplicity 0..1; }
}

relation AttributeRoleManagerHasAttributeRole {
	AttributeRoleManager playsRole attributeRoleManager { multiplicity 0..1; }
	AttributeRole playsRole attributeRole { multiplicity 0..*; }
}

relation InteractionHasDiscussion { 
	Interaction  playsRole interaction { multiplicity 0..1; }
	Discussion playsRole discussion { multiplicity 0..*; }
}

relation DiscussionHasConversation {
	Discussion playsRole discussion { multiplicity 0..1; }
	Conversation playsRole conversation { multiplicity 0..*; }
}

relation DiscussionHasCreatorParty {
	Discussion playsRole discussion { multiplicity 0..1; }
	Party playsRole creator { multiplicity 0..1; }
}

relation ConversationHasSenderParty {
	Conversation playsRole conversation { multiplicity 0..1; }
	Party playsRole sender { multiplicity 0..1; }
}
